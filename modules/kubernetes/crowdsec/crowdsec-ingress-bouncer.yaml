controller:
  extraVolumes:
    - name: crowdsec-bouncer-plugin
      emptyDir: {}
  extraInitContainers:
    - name: init-clone-crowdsec-bouncer
      image: crowdsecurity/lua-bouncer-plugin
      imagePullPolicy: IfNotPresent
      env:
        - name: API_URL
          value: "http://crowdsec-service.crowdsec.svc.cluster.local:8080" # crowdsec lapi service-name
        - name: API_KEY
          value: "<API KEY>" # generated with `cscli bouncers add -n <bouncer_name>
        - name: BOUNCER_CONFIG
          value: "/crowdsec/crowdsec-bouncer.conf"
        - name: CAPTCHA_PROVIDER
          value: "recaptcha" # valid providers are recaptcha, hcaptcha, turnstile
        - name: SECRET_KEY
          value: "<your-captcha-secret-key>" # If you want captcha support otherwise remove this ENV VAR
        - name: SITE_KEY
          value: "<your-captcha-site-key>" # If you want captcha support otherwise remove this ENV VAR
        - name: BAN_TEMPLATE_PATH
          value: /etc/nginx/lua/plugins/crowdsec/templates/ban.html
        - name: CAPTCHA_TEMPLATE_PATH
          value: /etc/nginx/lua/plugins/crowdsec/templates/captcha.html
      command:
        [
          "sh",
          "-c",
          "sh /docker_start.sh; mkdir -p /lua_plugins/crowdsec/; cp -R /crowdsec/* /lua_plugins/crowdsec/",
        ]
      volumeMounts:
        - name: crowdsec-bouncer-plugin
          mountPath: /lua_plugins
  extraVolumeMounts:
    - name: crowdsec-bouncer-plugin
      mountPath: /etc/nginx/lua/plugins/crowdsec
      subPath: crowdsec
  config:
    plugins: "crowdsec"
    lua-shared-dicts: "crowdsec_cache: 50m"
    server-snippet: |
      lua_ssl_trusted_certificate "/etc/ssl/certs/ca-certificates.crt"; # If you want captcha support otherwise remove this line
      resolver local=on ipv6=off;
